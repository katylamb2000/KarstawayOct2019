type Post @model 
  @key(name: "postsByStudent", fields: ["studentProfileID"], queryField: "postsByStudent")
  @auth  (
    rules: [
       
        { allow: owner, queries: null }
    ]  ) {
  id: ID!
  name: String!
  url: String
  isAVideo: Boolean!
  studentProfileID: ID!

  student: StudentProfile @connection(fields: ["studentProfileID"])
  comments: [Comment]! @connection(keyName: "commentsByPost", fields: ["id"])
}, 


type Course @model

@key(name: "coursesByTeacher", fields: ["teacherID"], queryField: "coursesByTeacher")
@auth(rules: [{ allow: owner, queries: null }])
{
   
  id: ID!
  teacher: Teacher! @connection(fields: ["teacherID"])
  teacherID: ID!
  title: String!
  description: String
  thumbnail: String
  level: String
  lessonVideos: [LessonVideo] @connection(keyName: "lessonsByCourse", fields: ["id"])
  
},

type LessonVideo @model

@key(name: "lessonsByCourse", fields: ["courseID"], queryField: "lessonsByCourse")
@auth(rules: [{ allow: owner, queries: null }])
{
   
  id: ID!
  course: Course @connection(fields: ["courseID"])
  courseID: ID!
  title: String!
  description: String
  thumbnail: String
  url: String
  
},


type Teacher @model 
@key(name: "teacherByStudentProfileId", fields: ["studentProfileID"], queryField: "teacherByStudentProfileId" )

  @auth  (rules: [  { allow: owner, queries: null } ])
  {
  id: ID!
  teacherName: String!
  teacherBio: String
  nationality: String
  teacherAvatar: String
  studentProfileID: ID!
  student: StudentProfile @connection(fields: ["studentProfileID"])
  introductionVideo: TeacherIntroductionVideo @connection
  courses: [Course] @connection(keyName: "coursesByTeacher", fields: ["id"])
  
},

type TeacherIntroductionVideo @model 
  @key(name: "introVideosByTeacher", fields: ["teacherID"], queryField: "introVideosByTeacher")
  @auth  (
    rules: [
       
        { allow: owner, queries: null }
    ]  ) {
  id: ID!
  title: String
  url: String
  description: String
  teacherID: ID!
  teacher: Teacher @connection(fields: ["teacherID"])
}, 



type Comment @model
  @key(name: "commentsByPost", fields: ["postID"], queryField: "commentsByPost")

 @auth  (
    rules: [
       
        { allow: owner, queries: null }
    ]  ) {

      id: ID!
      body: String!
      postID: ID!
      post: Post @connection(fields: ["postID"])
      studentProfileID: ID!
      postAuthor: StudentProfile @connection(fields: ["studentProfileID"])

    },




type StudentProfile @model
@key(name: "ByOwner", fields: ["owner"], queryField: "ByOwner") 


 @auth  (
    rules: [
       
        { allow: owner, queries: null }
    ]   
)
{
  owner: String 
  name: String!
  bio: String
  avatar: String
  id: ID! 
  company: [Company] @connection
  
  teacher: Teacher @connection(fields: ["id"])
  messages: [Message]! @connection(keyName: "byStudent", fields: ["id"])
  posts: [Post] @connection(keyName: "postsByStudent", fields: ["id"])
 
 
}

type Message @model 
@key(name: "byStudent", fields: ["studentProfileID"], queryField: "byStudent")
@key(name: "byMessageOwner", fields: ["owner"], queryField: "byMessageOwner")
@key(name: "byMessageSender", fields: ["senderID"], queryField: "byMessageSender")

@auth  (
    rules: [
       
        { allow: owner, queries: null }
    ]  ) 

{ 
  owner: String
  sender: StudentProfile @connection(fields: ["senderID"])
  senderID: ID!
  id: ID!
  body: String!
  studentProfileID: ID!
  recipient: StudentProfile @connection(fields: ["studentProfileID"])
  
}



type Picture @model   @auth  (
    rules: [
       
        { allow: owner }
    ]
){
  id: ID!
  owner: String

  uri: String
}



type Company @model 
@key(name: "CompanyAdminOwner", fields: ["owner"], queryField: "CompanyAdminOwner") 

@auth  (
    rules: [
       
        { allow: owner, queries: null }
    ]
)

{
  id: ID!
  companyName: String
  logo: String
  bio: String
  verified: Boolean
  owner: String
  programs: [Program] @connection(keyName: "byCompany", fields: ["id"])


}


type Program @model 
@key(name: "byCompany", fields: ["companyID"]) 

@auth  (
    rules: [
       
        { allow: owner, queries: null }
    ]
)
{
  id: ID!
  name: String
  location: String
  image: String
  description: String
  verified: Boolean
  companyID: ID!
  company: Company @connection(fields: ["companyID"])

}

